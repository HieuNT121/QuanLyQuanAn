<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btCapNhat.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAbCAYAAABr/T8RAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAA5BJREFUSEvFlslLW3EQx/u3tNDl1kMPXQ8q6iENSHFfcDm4VBER9Sg0aaEubYKg
        xCzWk1RQQdK0jQURkkYUt5qktrWgGJKoNYtJ3stxmhnI8/2SX8wrCD18IW9mMp/3m5nf7/euJZNJ+B/6
        J/DZ2RmsrKzA9PQ06PV60Ol0MDU1BUtLSxAMBrn/ySVFYI/HA4ODg1BSUgKFhYVQUVEBbW1t0N7eDtXV
        1WQrKiqC3t5ecDqd3ByZuhQciURgZGSEEre2tsLi4iJ3ZVgJu90OPT09UFBQAP39/eD3+7Pi5MoJ9vl8
        0NLSAmVlZVRKXgxPq6urUFNTA0NDQ1x/WlzwyckJ1NfXQ2NjIxwdHWX58ykajcL5+TnXlxYXPDAwAFVV
        VRAIBLJ8SiTGIpAU4lxfWllg7BX2dGNjg7ErlXD8G8L6JxA2PQMx+odse3t7NB/yOAYsiiKVFydYblcq
        guoeQ+jFdVLk/XMqO7YNp35ra0uKZcCbm5s0lTs7O5JNqYTgPgMNaW9C/JsVJicnKSequbkZEokExTNg
        g8EAlZWV0rNSCcFfKeijLChuqdLSUgmMSpecAff19WWVWYwcgxhPDYvMJhdB3z68gL68BfHdD+QzmUwM
        FNXU1EQ+Boz9nZiYkJ4F3y6ER+5BxKCmF5DHkj/wkwO1Sf6DgwOwWq2g1WppYBcWFqShZcANDQ1gNBql
        Z5zOdNKI4SkDFwI/UtAHLNT9UfLLZbPZCIzDm7YRGFeJJSguLgaVSkW/zWYzxBzGi8QEV4EYDoLgT0Hf
        3JdBb0Pc84mByTU7O0t55TYC4yoze2GxWCgg5jSlkt+QIAR8fZeBJjyfmaSZGh4eprNebiMwHpH4Rmmo
        Wq2G09NTKSjmNDNwBuq1Mwl5qq2thbGxMcYm9XhmZkYCY2nkQaj4VwsLf3UnBc1/eayvr1PO7e1txi6B
        BUGA7u5uutrkQyBX3PUOQpoUHKHfv3BjMoU58d7OtEtgVCgUgnA4zARkCg+GxL6yy35+fj7nuc+Ar1Iu
        l4u+WMbHx7n+S8Futxvm5uZylj6X8FhEqEajoRbyYi4FLy8v097u7OxUdE16vV66y7G8uNJcUFTeUuOH
        XldXF00mHix42OCnEN5keM3hy+Ge7+jooBj8XFpbW+PmkktxjxEyOjoKdXV1tKL01kOVl5fTeexwOBS3
        hcCiyHfmEl7uh4eHJNwJvJh8Urziq1US/gJ++hU7ZRZEHQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btThem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAAeAB4DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6orzr4lSt/alrGWOwQ7gueMljz+lRy/EC+MjeVa2wjz8obcTj
        35rn9e1mfWrpJ7lIkZE2ARg4xknufevCx2Po1qThB6nz2YZjRr0XTpvU9B+HcrSaA29iwSZlXJ6DAOP1
        rqK8i0LxTd6NZtbW8MDoXL5cHOSAOx9q2LX4gXIc/a7OFkxx5ZKnP4k1rhcxoQpRhJ6o2wmZ4eFKMJvV
        I15fAOkvIzLJdxhjkKrrgewytcX400e30PUobe0eV0eISEyEE5yR2A9K9iry/wCLsTRX9jckjY8RjAHX
        IJP9aMywtKFByhFJhmmEpU8O504pPQd4N8LWWt6U9zdS3KuspjAjYAYAB7g+tdLaeBtIgcs4uLgEY2yu
        MD34ApnwygaLwujsQRPK0i47Dgc/lXWVtg8JRdGEpRV7G+CwdF0ISlBXsf/Z
</value>
  </data>
</root>